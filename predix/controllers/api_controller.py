# -*- coding: utf-8 -*-

"""
    predix

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

from .base_controller import BaseController
from ..api_helper import APIHelper
from ..configuration import Configuration
from ..http.auth.basic_auth import BasicAuth

class APIController(BaseController):

    """A Controller to access Endpoints in the predix API."""


    def create_get_token(self,
                         content_type,
                         body):
        """Does a POST request to /token.

        TODO: Add Description

        Args:
            content_type (string): TODO: type description here. Example: 
            body (string): TODO: type description here. Example: 

        Returns:
            void: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.get_base_uri(Configuration.Server.SERVER_1)
        _query_builder += '/token'
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'Content-Type': content_type
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, headers=_headers, parameters=body)
        BasicAuth.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

    def create_synchronous_execution_nlp(self,
                                         content_type,
                                         predix_zone_id,
                                         body):
        """Does a POST request to /execution.

        Execute the analytic synchronously. The analytic_uri is the analytic
        catalog entry id followed by your Predix Platform domain name.

        Args:
            content_type (string): TODO: type description here. Example: 
            predix_zone_id (string): TODO: type description here. Example: 
            body (SynchronousExecutionNLPRequest): TODO: type description
                here. Example: 

        Returns:
            void: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.get_base_uri(Configuration.Server.SERVER_2)
        _query_builder += '/execution'
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'Content-Type': content_type,
            'Predix-Zone-Id': predix_zone_id
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, headers=_headers, parameters=APIHelper.json_serialize(body))
        BasicAuth.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

    def create_synchronous_execution_predict_resolutions(self,
                                                         content_type,
                                                         predix_zone_id,
                                                         body):
        """Does a POST request to /execution.

        Execute the analytic synchronously. The analytic_uri is the analytic
        catalog entry id followed by your Predix Platform domain name.

        Args:
            content_type (string): TODO: type description here. Example: 
            predix_zone_id (string): TODO: type description here. Example: 
            body (SynchronousExecutionPredictResolutionsRequest): TODO: type
                description here. Example: 

        Returns:
            void: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.get_base_uri(Configuration.Server.SERVER_3)
        _query_builder += '/execution'
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'Content-Type': content_type,
            'Predix-Zone-Id': predix_zone_id
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, headers=_headers, parameters=APIHelper.json_serialize(body))
        BasicAuth.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)
